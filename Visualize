from r3e_api import r3esharedmemory
import time

# Initialize shared memory
try:
    shared_memory = r3esharedmemory()
    shared_memory.update_offsets()
    print("Shared memory initialized successfully.")
except Exception as e:
    print(f"Failed to initialize shared memory: {e}")
    exit(1)

def print_data(data):
    """Function to print detailed data information"""
    if data is None:
        print("Failed to retrieve data. Data is None.")
    else:
        print(f"Successfully retrieved data: {data}")
        print(f"Data type: {type(data)}")
        
        if isinstance(data, dict):
            print("Data is a dictionary.")
            for key, value in data.items():
                print(f"Key: {key}, Value: {value}, Type: {type(value)}")
        else:
            print("Data is not a dictionary.")
            print(f"Raw data: {data}")

while True:
    try:
        data = shared_memory.get_value('Player')
        print_data(data)
        break  # Exit loop after one successful read for inspection
    except Exception as e:
        print(f"Unexpected error: {e}")
        break  # Exit loop on error for inspection

    time.sleep(0.5)
