from r3e_api import R3ESharedMemory
import time

# Initialize shared memory
shared_memory = R3ESharedMemory()
shared_memory.update_offsets()

while True:
    try:
        # Retrieve raw data from shared memory
        data = shared_memory.get_value('Player')
        if data is None:
            print("Failed to retrieve data. Data is None.")
        else:
            # Print the raw data and its type for inspection
            print(f"Retrieved raw data: {data}")
            print(f"Raw data type: {type(data)}")

            # Check if the data is a dictionary
            if isinstance(data, dict):
                # Print all keys and their types in the dictionary
                for key, value in data.items():
                    print(f"Key: {key}, Value: {value}, Type: {type(value)}")

                # Try to access the 'Speed' key
                if 'Speed' in data:
                    speed = data['Speed']
                    print(f"Speed: {speed}")
                else:
                    print("'Speed' key not found in the data.")
            else:
                print(f"Unexpected data type: {type(data)}. Data: {data}")

    except TypeError as e:
        print(f"TypeError: {e}")
    except KeyError as e:
        print(f"KeyError: {e}")
    except Exception as e:
        print(f"Unexpected error: {e}")

    time.sleep(0.5)
